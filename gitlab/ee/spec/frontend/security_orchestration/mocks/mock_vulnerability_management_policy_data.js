import { POLICY_SCOPE_MOCK } from 'ee_jest/security_orchestration/mocks/mock_apollo';
import { fromYaml } from 'ee/security_orchestration/components/policy_editor/vulnerability_management/utils';

/**
 * Naming convention for mocks:
 * mock policy yaml => name ends in `Manifest`
 * mock parsed yaml => name ends in `Object`
 * mock policy for list/drawer => name ends in `Policy`
 *
 * If you have the same policy in multiple forms (e.g. mock yaml and mock parsed yaml that should
 * match), please name them similarly (e.g. fooBarManifest and fooBarObject)
 * and keep them near each other.
 */

export const customYaml = `variable: true
`;

export const customYamlObject = { variable: true };

export const mockVulnerabilityManagementManifest = `type: vulnerability_management_policy
name: Auto-resolve low severity vulnerabilities
description: Auto-resolves no longer found low severity vulnerabilities
enabled: true
actions:
  - type: auto_resolve
rules:
  - type: no_longer_detected
    scanners:
      - sast
      - dependency_scanning
    severity_levels:
      - high
      - medium
  - type: no_longer_detected
    scanners: []
    severity_levels:
      - low
`;

export const mockVulnerabilityManagementObject = fromYaml({
  manifest: mockVulnerabilityManagementManifest,
});

export const mockVulnerabilityManagementInvalidObject = {
  ...mockVulnerabilityManagementObject,
  actions: [{ invalid_type: 'invalid' }],
  rules: [{ invalid_type: 'invalid' }],
};

export const mockProjectVulnerabilityManagementPolicy = {
  __typename: 'VulnerabilityManagementPolicy',
  name: `${mockVulnerabilityManagementObject.name}-project`,
  updatedAt: new Date('2021-06-07T00:00:00.000Z'),
  yaml: mockVulnerabilityManagementManifest,
  editPath: '/policies/policy-name/edit?type="vulnerability_management_policy"',
  enabled: true,
  ...POLICY_SCOPE_MOCK,
  source: {
    __typename: 'ProjectSecurityPolicySource',
    project: {
      fullPath: 'project/path',
    },
  },
};

export const mockVulnerabilityManagementPoliciesResponse = [
  mockProjectVulnerabilityManagementPolicy,
];
